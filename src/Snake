面向对象设计的贪吃蛇
1.找类和对象
    a.Snake类 蛇类
    b.Food类 食物类
    c.Ground类 障碍物类
    d.GamePanel 面板类 显示蛇、食物、障碍物
2.找类的方法（把想到的先写出来）
    2.1 Snake类
        move() 移动
        eatFood(Food food) 吃食物
        changeDirection() 改变方向
        drawMe() 画自己
        蛇是否碰到自己、是否碰到障碍物、是否碰到食物
    2.2 Food类
        isEatBySnake(Snake snake)
        drawMe()
    2.3 Ground类
        isEatBySanke(Snake snake)
        drawMe()
    2.4 GamePanel类 显示蛇、障碍物、食物
        display  显示
        重写 painComponent
3.控制器Controller
    3.1其实贪吃蛇游戏，就是控制蛇、障碍物、食物
         专门用控制器控制四个对象---->通过构造函数初始化
    3.2操作的时候通过键盘事件来控制
        所以让Controller继承KeyAdapter
    3.3蛇每次移动都应该判断是否碰到了自己、障碍物、食物
        可以写一个监听器来监听这三件事
4.组装游戏
    4.1创建所有对象
    4.2控制器可以控制游戏的开始
        添加startGame()方法 ---->就是让蛇start()
    4.3在snake中添加start()方法
        start方法的实现，启动一个线程，让蛇不断移动
    4.4创建一个线程SnakeDriver
    4.5给Snake添加监听器/面板添加事件监听器、
    4.6创建窗体，添加面板，启动游戏，显示界面
总结：通过前面的4步，把架子已经搭好，面向对象的设计已经完成
    采用的是mvc的方案，接下来具体实现
5具体实现
    5.1用什么数据结构存储蛇身
        Snake最重要的动作是蛇的移动
        蛇如何移动（火车拉的方式，去尾加头的方式）
        所以数据结构选择LinkedList
    5.2贪吃蛇完成后，蛇身就是几个方块组成的
        我们可以直接把面板划分 行列各多少个格子组成即可
        定义辅助类
    5.3初始化蛇身
        格子中间开始横向三个格子作为初始蛇身
        Snake的init()方法中完成
        画出蛇身 完成drawMe()方法
    5.4完成蛇的移动move()方法
        去尾巴加头的方式
    5.5完成食物的操作
        食物就是一个格子，格子的宽度和高度已经定义完成是固定的
        这样的就由左上角坐标来决定
        左上角坐标就是一个点
        可以让食物类继承Point
        设置食物出现的位置

        吃食物、把去掉的尾巴加回来即可
        什么时候吃食物----->蛇头碰到食物的时候

    5.6完成障碍物
